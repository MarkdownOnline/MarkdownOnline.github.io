/* BASICS */

.CodeMirror {
  line-height: 1em;
  height: 100%;
  font-family: monospace;
  cursor: text;
}

.CodeMirror textarea {
  outline: none !important;
}

.CodeMirror-focused div.CodeMirror-selected {
  background: var(--selection);
  transition: all 0.3s;
}

.CodeMirror-selected {
  background: var(--unfocusedselection);
}

.CodeMirror-searching {
  background: #ffa;
  background: rgba(255, 255, 0, 0.4);
}

/* PADDING */
.CodeMirror-lines {
  padding: 4px 0; /* Vertical padding around content */
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  padding: 0; /* Horizontal padding of content */
  transition: padding 0.3s;
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: var(
    --background
  ); /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
  background-color: var(--darkback);
  padding-right: 3px;
  border-right: 2px solid var(--line);
  box-shadow: var(--shadow) 0px 0px 20px;
  transition: all 0.3s;
}

.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  float: right;
  white-space: nowrap;
  font-family: TERM;
}

.CodeMirror-guttermarker {
  color: black;
}

.CodeMirror-guttermarker-subtle {
  color: #999;
}

/* CURSOR */

.CodeMirror .CodeMirror-cursors {
  transition: opacity 0.4s;
}

.CodeMirror .CodeMirror-cursor,
.CodeMirror div.CodeMirror-secondarycursor {
  z-index: 10;
  position: absolute;
  visibility: hidden;
  border-left: 2.7px solid var(--main);
  transition: all 0.13s cubic-bezier(0, 0.48, 0.27, 0.98);
  animation: fade 0.3s;
}

.CodeMirror-overwrite .CodeMirror-cursor {
  border-left: none;
  border-bottom: 2.7px solid var(--main);
  transform: translateY(-6px);
  width: 12px;
}

.CodeMirror-focused .CodeMirror-cursor {
  visibility: visible;
}

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 3px solid silver;
}

.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #7e7;
}

.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}

.cm-fat-cursor-mark {
  background-color: rgba(20, 255, 20, 0.5);
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
}

.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}

@-moz-keyframes blink {
  0% {
  }

  50% {
    background-color: transparent;
  }

  100% {
  }
}

@-webkit-keyframes blink {
  0% {
  }

  50% {
    background-color: transparent;
  }

  100% {
  }
}

@keyframes blink {
  0% {
  }

  50% {
    background-color: transparent;
  }

  100% {
  }
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {
}

.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-rulers {
  position: absolute;
  left: 0;
  right: 0;
  top: -50px;
  bottom: 0;
  overflow: hidden;
}

.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  top: 0;
  bottom: 0;
  position: absolute;
}

/* THEME */

.cm-s-default .cm-header {
  font-weight: bold;
}

.cm-s-default .cm-quote {
  padding-left: 10px;
  font-weight: bold;
  opacity: 0.65;
}

.cm-s-default .cm-hr {
  color: #999;
}

.cm-s-default .cm-link {
  color: #4879bd;
}

.cm-header,
.cm-strong {
  font-weight: bold;
}

.cm-em {
  font-style: italic;
}

.cm-comment {
  background: var(--com);
  border-radius: 3px;
}

.cm-emstrong {
  font-weight: bold;
}

.cm-link {
  text-decoration: underline;
}

.cm-string {
  color: #d68f29;
}

.cm-url {
  color: rgba(72, 121, 189, 0.7);
}

.cm-strikethrough {
  text-decoration: line-through;
}

.cm-negative {
  color: #d44;
}

.cm-positive {
  color: #292;
}

.cm-strikethrough {
  text-decoration: line-through;
  text-decoration-color: rgba(80, 80, 80, 0.7);
}

.cm-header-1:nth-child(1) {
  margin-left: -20.41px;
}
.cm-header-2:nth-child(1) {
  margin-left: -34.96px;
}
.cm-header-3:nth-child(1) {
  margin-left: -49.51px;
}
.cm-header-4:nth-child(1) {
  margin-left: -64.06px;
}
.cm-header-5:nth-child(1) {
  margin-left: -78.63px;
}
.cm-header-6:nth-child(1) {
  margin-left: -93.18px;
}

.term .cm-header-1:nth-child(1) {
  margin-left: -20px;
}
.term .cm-header-2:nth-child(1) {
  margin-left: -30px;
}
.term .cm-header-3:nth-child(1) {
  margin-left: -40px;
}
.term .cm-header-4:nth-child(1) {
  margin-left: -50px;
}
.term .cm-header-5:nth-child(1) {
  margin-left: -60px;
}
.term .cm-header-6:nth-child(1) {
  margin-left: -70px;
}

.cm-type,
.cm-atom {
  color: #c52727;
  font-weight: bold;
}

.cm-s-default .cm-tag {
  color: #dc3939;
}

.cm-s-default .cm-number {
  color: #46a609;
}

.cm-s-default .cm-def,
.cm-s-default .cm-variable {
  opacity: 0.8;
}

.cm-s-default .cm-punctuation,
.cm-s-default .cm-property {
}

.cm-s-default .cm-operator {
  color: #b4b4b4;
}

.cm-s-default .cm-string-2 {
  color: #f50;
}

.cm-s-default .cm-keyword {
  color: #af956f;
}

.cm-s-default .cm-meta,
.cm-s-default .cm-property {
  color: #21a366;
  font-weight: bold;
}

.cm-s-default .cm-keyword {
  font-weight: bold;
}

.cm-s-default .cm-qualifier {
  color: #555;
}

.cm-s-default .cm-builtin {
  color: #c52727;
}

.cm-s-default .cm-bracket {
  color: #808080 !important;
}

.cm-s-default .cm-attribute {
  color: #21a366;
}

.cm-s-default .cm-hr {
  color: #999;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
  font-family: var(--mainfont) !important;
}

.cm-comment,
.cm-type,
.cm-atom,
.cm-tag,
.cm-number,
.cm-def,
.cm-variable,
.cm-punctuation,
.cm-property,
.cm-operator,
.cm-string-2,
.cm-keyword,
.cm-meta,
.cm-property,
.cm-qualifier,
.cm-builtin,
.cm-bracket,
.cm-attribute,
.cm-error,
.cm-invalidchar,
.CodeMirror-composing,
.cm-string {
  font-family: TERM, var(--mainfont);
}

.CodeMirror-activeline {
  color: var(--active);
  transition: all 0.3s;
}

CodeMirror-activeline-background {
  background: var(--background);
}

.CodeMirror-lines {
  color: #999;
}

.cm-s-default .cm-error,
.cm-invalidchar {
  background: #e70000 !important;
  color: #fff !important;
  border-radius: 3px;
}

.CodeMirror {
  color: rgba(0, 0, 0, 0);
  transition: all 0.3s !important;
}

.CodeMirror:hover {
  color: var(--scroll);
}

.CodeMirror-vscrollbar {
  transition: background 0.2s;
  border-radius: 13px;
  cursor: default;
  width: 25px;
}

.CodeMirror-vscrollbar:hover {
  background: var(--darkback);
}
@-moz-document url-prefix() {
  .CodeMirror-vscrollbar {
    background: var(--background) !important;
    opacity: 0.5;
  }
}
/* STOP */
/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */
.CodeMirror {
  position: relative;
  overflow: hidden;
  background: white;
}

.CodeMirror-scroll {
  overflow-y: scroll !important; /* Things will break if this is overridden */
  overflow-x: hidden;
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
}

.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}

.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}

.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}

.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0;
}

.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  min-height: 100%;
  z-index: 3;
  animation: guttersFade 0.3s cubic-bezier(0, 0.6, 0.06, 0.99);
}

.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -30px;
}

.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}

.CodeMirror-gutter-background {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4;
}

.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}

.CodeMirror-lines {
  cursor: text;
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual;
}

.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {
}

.CodeMirror-rtl pre {
  direction: rtl;
}

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none;
}

.CodeMirror-measure pre {
  position: static;
}

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
  transform: translateX(-1.3px);
}

div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-crosshair {
  cursor: crosshair;
}

.cm-searching {
  background-color: #ff0;
}

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: 0.1px;
}

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

/* See issue #2901 */
.cm-tab-wrap-hack:after {
  content: "";
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none;
}
